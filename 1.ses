objectvar save_window_, rvp_
objectvar scene_vector_[6]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin PointProcessManager
{
load_file("pointman.hoc")
}
{
apical[5] ocbox_ = new PointProcessManager(0)
}
{object_push(ocbox_)}
{
mt.select("NMDA5") i = mt.selected()
ms[i] = new MechanismStandard("NMDA5")
ms[i].set("gmax", 500, 0)
hoc_ac_ = 0.0681818
sec.sec move() d1.flip_to(0)
}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.v1
ocbox_.map("PointProcessManager", 205, 205, 293.4, 318.6)
}
objref ocbox_
//End PointProcessManager

{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 0
xvalue("t","t", 2 )
tstop = 600
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
xcheckbox("Quiet",&stdrun_quiet,"")
realtime = 104
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(330,67)
}
{
save_window_ = new Graph(0)
save_window_.size(0,500,-80,40)
scene_vector_[2] = save_window_
{save_window_.view(0, -80, 500, 120, 6, 481, 434.7, 285.4)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addvar("soma[5].v( 0.5 )", 1, 1, 0.797024, 0.835679, 2)
save_window_.addexpr("apical[74].v( 0.5 )", 3, 1, 0.797006, 0.958267, 2)
}
{
save_window_ = new PlotShape(0)
save_window_.size(-317.8,241.2,-239.099,164)
save_window_.variable("v")
scene_vector_[3] = save_window_
{save_window_.view(-317.8, -239.099, 559, 403.099, 613, 0, 448.2, 323.2)}
fast_flush_list.append(save_window_)
save_window_.save_name("fast_flush_list.")
}
{
save_window_ = new Graph(0)
save_window_.size(0,500,-2,1)
scene_vector_[4] = save_window_
{save_window_.view(0, -2, 500, 3, 600, 480, 458.1, 287.2)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
}
objectvar scene_vector_[1]
{doNotify()}
